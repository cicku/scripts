#!/bin/sh

# Read It Later --- ril.sh 0.3
# Last edit Time-stamp: <2015-07-11 01:39:54 (f6k)>

# Copyleft (C) 2014 FGK <f6k@opmbx.org>

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Usage : $ ril.sh [LINK]

# Important notes:
# - Change the folder variable to feet your needs

# - The url *MUST NOT* end with a '/' otherwise the script will not be
#   able to use the url for generating the filename.

# Version 0.3
# - public release

# Version 0.2private
# - added the DOMAIN in filename
# - cleaning

# Version 0.1private
# - first release

# TODO
# - find a way to download _only_ the important article content (like
#   Clearly display only the interesting content when you active it
#   under firefox)
# - avoid the end '/' if it's present
# - add a rule to avoid the ?#things generated by RSS/Atom
# - add a rule to have the right tld (for having foo and not wordpress
#   when downloading from foo.wordpress.com for example)

if [ ! "$1" ]; then
        echo "Usage: ril.sh [LINK]"
        exit 1
else
        # Where the articles goes
        FOLDER="/tmp/"

        # To prevent hairy quoting and escaping later.
        bq='`'
        eq="'"

        # Other variables
        FILEDATE=$(date +%s)
        ARTICLETITLE=$(echo $1 |awk -F"/" '{print $(NF-0)}' |sed 's/_/-/g')
        DOMAIN=$(echo $1 |cut -d "/" -f3 |awk -F"." '{print $(NF-1)}')
        FILENAME=$FILEDATE"_"$DOMAIN"_"$ARTICLETITLE".txt"
        LYNX='lynx -dump -width=75 -verbose -nolist -with_backspaces'

        if [ ! -d "$FOLDER" ]; then
            echo "$bq$FOLDER$eq doesn't exist! Exiting..."
            exit 1
        else
            cd $FOLDER
            echo -en "Generate file from "$bq$DOMAIN$eq" to "$bq$FOLDER$eq"... "
            echo "# FROM $1" >> $FILENAME
            echo "# WITH $LYNX" >> $FILENAME
            echo "# DUMP "$(date --rfc-3339=seconds) >> $FILENAME
            echo "# FILE 75COL UTF-8" >> $FILENAME
            echo -en "\n\n" >> $FILENAME
            $LYNX $1 |sed "s/â€™/'/g" >> $FILENAME
            echo "done."
            exit 0
        fi
fi
